name: Build and test

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  build-and-test:
    runs-on: macos-latest
    timeout-minutes: 20
    name: "Build and test"
    steps:
      - name: Cancel previous jobs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Git - Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Select Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      # - name: Install SSH key
      #   uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.SSH_KEY }}
      #     name: id_rsa_github_actions
      #     known_hosts: ${{ secrets.KNOWN_HOSTS }}

      # - uses: webfactory/ssh-agent@v0.7.0
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_KEY }}

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7.5"
          bundler-cache: true
          
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.3.0

      - run: npm install --save slack-message-builder

      - name: Test & Build ðŸš€
        run: |
          bundle exec fastlane unit_tests
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          APPETIZE_API_TOKEN: ${{ secrets.APPETIZE_API_TOKEN }}
          SOURCE_BRANCH: ${{ github.head_ref }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          
      # - name: Create Slack Success Summary Report
      #   if: ${{ success() && github.event.pull_request.base.ref == 'master'  }}
      #   run: |
      #     node Report\ Scripts/appetize-success-report-script.js createAppetizeSummaryReport ${{ github.head_ref || github.ref_name }}
      # - name: Slack Success Notification
      #   if: ${{ success() && github.event.pull_request.base.ref == 'master' }}
      #   uses: slackapi/slack-github-action@v1.23.0
      #   with:
      #     channel-id: ${{ secrets.SLACK_MOBILE_SDK_CHANNEL }}
      #     payload-file-path: '/var/tmp/appetize-success-link-summary.json'
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_REPORTER_BOT_TOKEN }}

      # - name: Create Slack Failure Summary Report
      #   if: ${{ failure() && github.event.pull_request.base.ref == 'master' }}
      #   run: |
      #     node Report\ Scripts/appetize-failure-report-script.js createAppetizeSummaryReport ${{ github.head_ref || github.ref_name }}
      # - name: Slack Notification
      #   if: ${{ failure() && github.event.pull_request.base.ref == 'master' }}
      #   uses: slackapi/slack-github-action@v1.23.0
      #   with:
      #     channel-id: ${{ secrets.SLACK_MOBILE_SDK_CHANNEL }}
      #     payload-file-path: '/var/tmp/appetize-failure-link-summary.json'
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_REPORTER_BOT_TOKEN }}